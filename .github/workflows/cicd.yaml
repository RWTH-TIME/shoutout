name: CI
on:
  push:
    branches:
      - 'main'
  pull_request:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}

jobs:
  lint-dashboard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4

      - name: Install dependencies
        working-directory: ./dashboard
        run: npm install

      - run: |
          cd dashboard &&
          npm run lint

  lint-worker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
          
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
        
      - name: Run flake8
        uses: py-actions/flake8@v2
        with:
          path: "worker"
  
  build:
    name: Build docker image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - context: sanity_check
            image: sanity_check
            build_always: true
          - context: dashboard
            image: dashboard
            build_always: true
          - context: worker
            model: turbo
            image:  worker-turbo
            build_always: false
          - context: worker
            model: large-v3
            image:  worker-large
            build_always: false
          - context: worker
            model: medium
            image: worker-medium
            build_always: false 
          - context: worker
            model: small
            image: worker-small
            build_always: false
          - context: worker
            model: tiny
            image: worker-tiny
            build_always: true
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        if: ${{ matrix.build_always || github.ref == 'refs/heads/main' }} 

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
        if: ${{ matrix.build_always || github.ref == 'refs/heads/main' }} 

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{env.IMAGE_NAME}}/${{ matrix.context }}
          tags: |
            type=ref, event=pr
            type=raw, value=${{ matrix.model }}, enable=${{ matrix.image != 'dashboard' }} # tags for model-sizes
            type=raw, value=latest , enable=${{ (github.ref == format('refs/heads/{0}', 'main')) && (matrix.image == 'worker-turbo' || matrix.image == 'dashboard')}} # tag worker turbo and dashboard branch as latest
        if: ${{ matrix.build_always || github.ref == 'refs/heads/main' }} 

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ${{matrix.context}}
          push: true
          build-args: |
            WHISPER_MODEL=${{ matrix.model }}
            HUGGINGFACE_APIKEY=${{ secrets.HUGGINGFACE_APIKEY }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        if: ${{ matrix.build_always || github.ref == 'refs/heads/main' }}
