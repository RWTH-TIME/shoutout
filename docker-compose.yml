version: "3.9"

services:
  dashboard:
    build: dashboard
    restart: always
    ports:
      - "8000:80"
    environment:
      - MINIO_ENDPOINT=localhost # TODO update this to external hostname
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=shoutoutdevuser
      - MINIO_SECRET_KEY=shoutoutdevuser
      - MINIO_JOB_BUCKET=shoutout-job-bucket
      - MINIO_SSL_ENABLED=false # TODO toggle if your endpoint is supporting valid https
      - RABBITMQ_URL=amqp://rabbit:rabbit@rabbitmq
      - QUEUE_NAME=jobs
      - DATABASE_URL=postgresql://admin:admin@postgres:5432/postgres?schema=public
      - DOWNLOAD_FILE_TARGET_DIR=finished-files/
      - UPLOAD_FILE_TARGET_DIR=to-transcribe/
      - FINISHED_FILE_FORMAT=.txt
    depends_on:
      - postgres
      - minio
      - rabbitmq

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - shoutout-db-data:/var/lib/postgresql/data

  minio:
    image: quay.io/minio/minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"

  mc:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
      /bin/bash -c 'while ! $((echo >/dev/tcp/minio/9000) &>/dev/null); do echo waiting for minio; sleep 3; done; echo minio healthcheck successful;';
      /usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/shoutout-job-bucket;
      /usr/bin/mc admin user add minio shoutoutdevuser shoutoutdevuser;
      /usr/bin/mc admin policy attach minio readwrite --user shoutoutdevuser;
      exit 0;"

  rabbitmq:
    image: rabbitmq:management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    ports:
      - "5672:5672"
      - "15672:15672"

  worker:
    build:
      context: worker
      args:
        - HUGGINGFACE_APIKEY=not_a_real_api_key # TODO replace with a real one
        - WHISPER_MODEL=small # TODO GPU: use `large-v3` for more precise results
    restart: always
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=postgres
      - DATABASE_USER=admin
      - DATABASE_PASSWORD=admin
      - DATABASE_PORT=5432
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=rabbit
      - RABBITMQ_PASSWORD=rabbit
      - RABBITMQ_QUEUE=jobs
      - MINIO_JOB_BUCKET=shoutout-job-bucket
      - MINIO_SECRET_KEY=shoutoutdevuser
      - MINIO_ACCESS_KEY=shoutoutdevuser
      - MINIO_URL=http://minio:9000/
      - TMP_FILE_DIR=tmp_downloads/
      - UPLOAD_FILE_TARGET_DIR=finished-files/
      - DOWNLOAD_FILE_DIR=to-transcribe/
      - FINISHED_FILE_FORMAT=.txt
    depends_on:
      - postgres
      - minio
      - rabbitmq
    deploy:
      mode: replicated
      replicas: 2
      # TODO GPU: If you haven't installed the nividia-container-toolkit delete the following part:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  shoutout-db-data:
  minio_data:
